apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        cdi.kubevirt.io: cdi-operator
        name: cdi-operator
        operator.cdi.kubevirt.io: ""
        prometheus.cdi.kubevirt.io: "true"
    name: cdi-operator
    namespace: {{ .Release.Namespace }}
spec:
    replicas: {{ .Values.cdiOperator.replicas }}
    selector:
        matchLabels:
            name: cdi-operator
            operator.cdi.kubevirt.io: ""
    strategy: {}
    template:
        metadata:
            annotations:
                openshift.io/required-scc: restricted-v2
            labels:
                cdi.kubevirt.io: cdi-operator
                name: cdi-operator
                operator.cdi.kubevirt.io: ""
                prometheus.cdi.kubevirt.io: "true"
        spec:
            affinity:
                podAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                                matchExpressions:
                                    - key: cdi.kubevirt.io
                                      operator: In
                                      values:
                                        - cdi-operator
                            topologyKey: kubernetes.io/hostname
                          weight: 1
            containers:
                - env: {{ .Values.cdiOperator.env | toYaml | nindent 20 }}
                  image: quay.io/kubevirt/cdi-operator:v1.63.1
                  imagePullPolicy: IfNotPresent
                  name: cdi-operator
                  ports:
                    - containerPort: 8443
                      name: metrics
                      protocol: TCP
                  resources:
                    requests:
                        cpu: 100m
                        memory: 150Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    runAsNonRoot: true
                    seccompProfile:
                        type: RuntimeDefault
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: FallbackToLogsOnError
            nodeSelector: {{ .Values.cdiOperator.nodeSelector | toYaml | nindent 16 }}
            securityContext:
                runAsNonRoot: true
            serviceAccountName: cdi-operator
            tolerations: {{ .Values.cdiOperator.tolerations | toYaml | nindent 16 }}
