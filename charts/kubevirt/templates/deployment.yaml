apiVersion: apps/v1
kind: Deployment
metadata:
    labels:
        kubevirt.io: virt-operator
    name: virt-operator
    namespace: {{ .Release.Namespace }}
spec:
    replicas: {{ .Values.kubevirtOperator.replicas }}
    selector:
        matchLabels:
            kubevirt.io: virt-operator
    strategy:
        type: RollingUpdate
    template:
        metadata:
            annotations:
                openshift.io/required-scc: restricted-v2
            labels:
                kubevirt.io: virt-operator
                name: virt-operator
                prometheus.kubevirt.io: "true"
            name: virt-operator
        spec:
            affinity:
                podAntiAffinity:
                    preferredDuringSchedulingIgnoredDuringExecution:
                        - podAffinityTerm:
                            labelSelector:
                                matchExpressions:
                                    - key: kubevirt.io
                                      operator: In
                                      values:
                                        - virt-operator
                            topologyKey: kubernetes.io/hostname
                          weight: 1
            containers:
                - args:
                    - --port
                    - "8443"
                    - -v
                    - "2"
                  command:
                    - virt-operator
                  env: {{ .Values.kubevirtOperator.env | toYaml | nindent 20 }}
                  image: quay.io/kubevirt/virt-operator:v1.6.2
                  imagePullPolicy: IfNotPresent
                  livenessProbe:
                    httpGet:
                        path: /metrics
                        port: 8443
                        scheme: HTTPS
                    initialDelaySeconds: 5
                    timeoutSeconds: 10
                  name: virt-operator
                  ports:
                    - containerPort: 8443
                      name: metrics
                      protocol: TCP
                    - containerPort: 8444
                      name: webhooks
                      protocol: TCP
                  readinessProbe:
                    httpGet:
                        path: /metrics
                        port: 8443
                        scheme: HTTPS
                    initialDelaySeconds: 5
                    timeoutSeconds: 10
                  resources:
                    requests:
                        cpu: 10m
                        memory: 450Mi
                  securityContext:
                    allowPrivilegeEscalation: false
                    capabilities:
                        drop:
                            - ALL
                    seccompProfile:
                        type: RuntimeDefault
                  terminationMessagePolicy: FallbackToLogsOnError
                  volumeMounts:
                    - mountPath: /etc/virt-operator/certificates
                      name: kubevirt-operator-certs
                      readOnly: true
                    - mountPath: /profile-data
                      name: profile-data
            nodeSelector: {{ .Values.kubevirtOperator.nodeSelector | toYaml | nindent 16 }}
            priorityClassName: kubevirt-cluster-critical
            securityContext:
                runAsNonRoot: true
                seccompProfile:
                    type: RuntimeDefault
            serviceAccountName: kubevirt-operator
            tolerations: {{ .Values.kubevirtOperator.tolerations | toYaml | nindent 16 }}
            volumes:
                - name: kubevirt-operator-certs
                  secret:
                    optional: true
                    secretName: kubevirt-operator-certs
                - emptyDir: {}
                  name: profile-data
